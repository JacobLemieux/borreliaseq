import pandas as pd
import os
import numpy as np
import seaborn as sns
import os.path
from Bio import SeqIO
from Bio.Seq import Seq
from Bio.SeqRecord import SeqRecord
import matplotlib.pyplot as plt
import statsmodels.api as sm
from scipy.stats import chi2_contingency
os.chdir(os.path.expanduser("~") + "/Dropbox/Tick/borrelia/borreliaseq/notebooks")
metadata = pd.read_csv("../results/LymeSeq_SampleTrack - Renaming Scheme Table for Jupyter.2023-02-14.csv", na_values="ND")
metadata["MEM_Binary"] = metadata['Multiple_EM(Y/N)'].replace(['N','Y'], [0,1])
metadata["Disseminated_Binary"] = metadata['Disseminated'].replace(['L','D'], [0,1])
metadata["OspC_A"] = [1 if i == "A"  else 0 for i in metadata["OspC_Type"]]
metadata["RST_1"] = [1 if i == 1  else 0 for i in metadata["RST_Type"]]
metadata["OspC_K"] = [1 if i == "K"  else 0 for i in metadata["OspC_Type"]]
p
View(metadata)
# be sure to open RStudio from borreliaseq/notebooks or set this to your path.
# Read in libraries ####
library(tidyverse)
library(ggtree)
library(ggtreeExtra)
library(treeio)
library(ape)
library(phytools)
library(cowplot)
source("../scripts/Heatmap_PAM.R")
library(GGally)
library("ggpubr")
#library(DECIPHER)
library(forcats)
library("DescTools")
library(ggpubr)
library(ggfortify)
library(ggnewscale)
library(ggstar)
library(scales)
library(ggrepel)
#library(beastio)
# Read in data ####
# read in trees and midpoint root
x <- read.newick("../results/roary-results/core_gene_alignment.nwk")
x1 <- read.newick("../results/cfOUT_.labelled_tree.newick")
y <- read.newick("../results/OspC_Bbss_combined_4_24_2021.nwk")
z <- read.newick("../results/roary-results/split/core_gene_alignment_split.tree")
a <- read.newick("../results/roary-results/accessory_binary_genes.fa.newick")
x <- midpoint.root(x)
x1 <- midpoint.root(x1)
y <- midpoint.root(y)
z <- midpoint.root(z)
a <- midpoint.root(a)
b <- read.beast("../results/BEAST/no_dates_ancestral_geography/core_gene_alignment.aln.mcc.tree")
iq_tree <- read.iqtree("../results/roary-results/core_gene_alignment.aln.contree")
iq_tree@phylo <- midpoint.root(iq_tree@phylo)
O_tree <- read.beast("../results/trees/OspC_MCC.tree")
# check and parse labels
OspC_names <- O_tree@phylo$tip.label
OspC_names_table <- data.frame(str_split(OspC_names, pattern="_", simplify=TRUE))
dup_vector <- OspC_names_table[which(duplicated(OspC_names_table[,1])),1]
OspC_names_table$duplicated <- OspC_names_table[,1] == dup_vector
OspC_names_table$new_name <- ifelse(!OspC_names_table$duplicated, OspC_names_table[,1], paste(OspC_names_table[,1], OspC_names_table[,2], sep="_"))
O_tree@phylo$tip.label <- OspC_names_table$new_name
View(OspC_names_table)
View(OspC_names_table)
# read in metadata
metadata <- read_csv("../results/LymeSeq_SampleTrack - Renaming Scheme Table for Jupyter.2023-02-14.csv", na = c("", "NA", "ND")) %>%
mutate(RST_Type = factor(RST_Type)) %>%
mutate(OspCK = ifelse(OspC_Type == "K", "K", "other")) %>%
mutate(OspCA = ifelse(OspC_Type == "A", 1, 0)) %>%
mutate(Region = recode(Location, Nantucket = "US Northeast", NY = "US Northeast",
RI = "US Northeast", CT = "US Northeast", WI = "US Midwest",
Slovenia = "EU Slovenia"
)) %>%
mutate(Severity_Score = recode(Severity, mild = 0, moderate = 1, severe = 2))
names(metadata)[1] <- "label"
metadata <- metadata %>%
filter(label %in% x$tip.label)
# read in distances and infer clusters
d <- data.frame(read_tsv("../results/kWIP-results/Bb.dist"))
# clean up
rownames(d) <- d[,1]
d <- d[,-1]
d <- d[rownames(d) %in% metadata$label, colnames(d) %in% metadata$label]
#plot(cmdscale(d))
set.seed(1111)
clust <- kmeans(cmdscale(d), 3)$cluster %>%
as.factor()
set.seed(1111)
clust2 <- kmeans(cmdscale(d), 4)$cluster %>%
as.factor()
mds <- cmdscale(d) %>%
as_tibble %>%
mutate(groups = clust, label = rownames(cmdscale(d))) %>%
mutate(groups2 = clust2) %>%
mutate(wgs_group = factor(recode(groups2, `1` = "A", `2`="B.2", `3`="B.1", `4`="C"))) %>%
mutate(wgs_group = factor(wgs_group, levels(wgs_group)[c(1,3,2,4)])) %>%
mutate(WGS_Group = factor(recode(groups, `1` = "A", `2`="C", `3`="B"))) %>%
mutate(WGS_Group = factor(WGS_Group, levels(WGS_Group)[c(1,3,2)]))
# merge in MDS assignments to metadata
metadata_extended <- full_join(metadata, mds, by = "label")  %>%
mutate(dissem_bin = ifelse(Disseminated == "D", 1, 0)) %>%
mutate(Country = recode(Region, `US Northeast` = "US", `US Midwest` = "US", `EU Slovenia` = "Slovenia"))
metadata_extended <- data.frame(metadata_extended)
# Create basic trees ####
p <- ggtree(x)
p1 <- ggtree(y)
# Calculate proportions of RST and OspC types
print("RST Types")
table(metadata$RST_Type)/sum(table(metadata$RST_Type))
# Ensure that we have a full set of isolates
print("total number of isolates with RST typing")
sum(table(metadata[,5]))
print("OspC Types")
table(metadata$OspC_Type)/sum(table(metadata$OspC_Type))
print("total number of isolates with OspC typing")
sum(table(metadata$OspC_Type))
# Count numbers of OspC Types
table(metadata$OspC_Type)
sum(table(metadata$OspC_Type))
# Make a variety of trees
location_tree <- ggtree(x) %<+% metadata +
geom_tippoint(aes(color=Region, subset=!is.na(Location)), size = 4)
loc_ospC <- ggtree(y) %<+% metadata +
geom_tippoint(aes(color=Region, subset=!is.na(Location)), size = 4)
OspC_type_tree <- ggtree(x) %<+% metadata +
geom_tippoint(aes(color=OspC_Type, subset=!is.na(OspC_Type)), size = 4)
ospC_tree <- ggtree(y) %<+% metadata +
geom_tippoint(aes(color=OspC_Type, subset=!is.na(OspC_Type)), size = 4)
RST_type_tree <- ggtree(x) %<+% metadata +
geom_tippoint(aes(color=RST_Type, subset=!is.na(RST_Type)), size = 4)
RST_ospC <- ggtree(y) %<+% metadata +
geom_tippoint(aes(color=RST_Type, subset=!is.na(RST_Type)), size = 4)
dissem_tree <- ggtree(x) %<+% metadata_extended +
geom_tippoint(aes(color=Disseminated, subset=!is.na(Disseminated)), size = 4, alpha = 0.6)
source_tree <- ggtree(x) %<+% metadata +
geom_tippoint(aes(color=Source, subset=!is.na(Source)), size = 4)
MEM_tree <- ggtree(x) %<+% metadata +
geom_tippoint(aes(color=`Multiple_EM(Y/N)`, subset=!is.na(`Multiple_EM(Y/N)`)), size = 4)
MLST_tree <- ggtree(x) %<+% metadata +
geom_tippoint(aes(color=MLST, subset=!is.na(MLST)), size = 4)
MLST_ospC <- ggtree(y) %<+% metadata +
geom_tippoint(aes(color=MLST, subset=!is.na(MLST)), size = 4)
wgs_tree <- ggtree(x) %<+% metadata_extended +
geom_tippoint(aes(color=WGS_Group, subset=!is.na(groups)), size = 4)
# Annotate trees with WGS groups
wgs_tree_split <- ggtree(z) %<+% metadata_extended +
geom_tippoint(aes(color=groups, subset=!is.na(groups)), size = 4)
wgs_tree_RST <- ggtree(x) %<+% metadata_extended +
geom_tippoint(aes(color=RST_Type), size = 2)
ospc_tree <- ggtree(y) %<+% metadata_extended +
geom_tippoint(aes(color=groups, subset=!is.na(groups)), size = 4)
wgs2_tree <- ggtree(x) %<+% metadata_extended +
geom_tippoint(aes(color=wgs_group, subset=!is.na(wgs_group)), size = 4)
wgs_tree_ospc <- ggtree(x) %<+% metadata + geom_tippoint(aes(color = OspC_Type), size = 4)
# annotate tree with roary data and annotations
genotype <- as.data.frame(read_csv("../results/roary-results/gene_presence_absence.csv"))
rownames(genotype) <- genotype[,1]
genotype <- genotype[,-c(1:14)]
# convert to Rtab object
gene_mat <- mapply(function(x) ifelse(!is.na(x), 1, 0), genotype)
gene_mat <- data.frame(gene_mat)
gene_mat$Gene <- rownames(genotype)
# read in annotation from roary
annotation <- read.csv("../results/roary-results/gene_presence_absence.csv")
annotation <- annotation[,c(1,3)]
annotation$Gene_trunc <- gsub("group", "g", annotation$Gene)
annotation$Annotation <- gsub("hypothetical protein", "hyp", annotation$Annotation)
gt.annotated <- merge(annotation, gene_mat)
rownames(gt.annotated) <- paste(gt.annotated$Gene_trunc,":  ", gt.annotated$Annotation, sep="")
gt.annotated <- gt.annotated[,-c(1:3)]
# read in annotation from the Make_Manhattan.ipynb
annot <- as_tibble(read_csv("../results/annotation/compiled_annotation.csv")) %>%
mutate(Gene = group) %>% select(-group) %>% select(Gene,ID, Locus, B31_Annotation, Localization) %>% distinct()
gt.annot <- merge(annot, gene_mat)  #%>% filter(Localization == "S")
gt.annot.L <- merge(annot, gene_mat) %>% filter(Localization == "S")
rownames(gt.annot) <- paste(gt.annot$Locus, gt.annot$B31_Annotation, gt.annot$Gene)
rownames(gt.annot.L) <- paste(gt.annot.L$Locus, gt.annot.L$B31_Annotation, gt.annot.L$Gene)
gt.annot <- gt.annot[,-c(1:5)]
gt.annot.L <- gt.annot.L[,-c(1:5)]
gt.annot.E <- gt.annot.L[grep("erp",rownames(gt.annot.L), ignore.case=TRUE),]
gt.annot.M <- gt.annot.L[grep("mlp",rownames(gt.annot.L), ignore.case=TRUE),]
# compute number of ORFS; might be nice to be able to plot these with a barplot next to the tree, but haven't figured out how to do this yet.
genome_length <- rowSums(t(gt.annotated))
genome_lengths <- data.frame(ORF_length = genome_length, label = colnames(gt.annotated))
metadata_extended <- left_join(metadata_extended, genome_lengths, by = "label")
##
x2 <- read.tree("../results/RAxML_bestTree.raxOUT.nwk")
x2 <- midpoint.root(x2)
##
mds_plot2 <- ggscatter(mds, x = "V1", y = "V2",
#label = rownames(d),
color = "wgs_group",
size = 1,
ellipse = TRUE,
#ellipse.type = "convex",
repel = TRUE) + labs(x = "MDS Coordinate 1", y = "MDS Coordinate 2")
mds_plot2
# Generate MDS plots annotated with metadata ####
mds_OspC <- ggscatter(metadata_extended %>% filter(!is.na(OspC_Type)), x = "V1", y = "V2",
#label = rownames(d),
color = "OspC_Type",
size = 1,
repel = TRUE) + labs(x = "MDS Coordinate 1", y = "MDS Coordinate 2")
mds_OspC_lab <- ggscatter(metadata_extended %>% filter(!is.na(OspC_Type)), x = "V1", y = "V2",
#label = rownames(d),
color = "OspC_Type", label = "OspC_Type",
size = 1,
repel = TRUE) + labs(x = "MDS Coordinate 1", y = "MDS Coordinate 2")
mds_MLST <- ggscatter(metadata_extended %>% filter(!is.na(OspC_Type)), x = "V1", y = "V2",
#label = rownames(d),
color = "MLST",
size = 1,
repel = TRUE) + labs(x = "MDS Coordinate 1", y = "MDS Coordinate 2", title = "MLST") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position = "none")
dissem_data <- ggscatter(metadata_extended, x = "V1", y = "V2",
#label = rownames(d),
color = "Disseminated",
size = 1,
repel = TRUE) + labs(x = "MDS Coordinate 1", y = "MDS Coordinate 2")
loc_data <- ggscatter(metadata_extended, x = "V1", y = "V2",
#label = rownames(d),
color = "Region",
size = 1,
repel = TRUE) + labs(x = "MDS Coordinate 1", y = "MDS Coordinate 2")
plot_grid(mds_OspC, mds_MLST, dissem_data, loc_data, labels = c("A", "B", "C", "D"))
#ggsave("../results/figures/paper/revision/Figure_S1.jpg", height = 10, width = 10)
mds_OspC
# Figure S2E (OspC circular tree) ####
metadata_extended_ospC <- metadata_extended[,c("label", "OspC_Type", "wgs_group")]
View(metadata_extended)
View(metadata_extended_ospC)
metadata_extended_ospC <- rbind(metadata_extended_ospC,
c("URI20_1", "G", "B.2"))
?rbind
# Figure S2E (OspC circular tree) ####
metadata_extended_ospC <- metadata_extended[,c("label", "OspC_Type", "wgs_group")]
metadata_extended_ospC <- rbind(metadata_extended_ospC,
c("URI20_1", "G", "B.2"),
c("URI20_2", "G", "B.2"))
q2 <- ggtree(O_tree, layout="fan", open.angle=5) %<+%
metadata_extended_ospC +
geom_tiplab(aes(label = paste("OspC Type ",OspC_Type, sep="")), size=1.2, offset = 0.0075) +
geom_nodelab(aes(label = round(posterior,2), subset = posterior > 0.9),
,hjust = 1.3,alpha = 0.4, color = "blue") +
#geom_tippoint(aes(color = wgs_group), alpha = 0.4)+
scale_fill_manual(values=hue_pal()(23), guide = "none") +
geom_fruit(geom = geom_bar,
mapping = aes(y=label,x=1,fill=OspC_Type),
stat='identity',
alpha = 0.5,
pwidth = 0.18,
offset = 0.03) +
new_scale_fill()+
geom_fruit(data = md, geom = geom_tile,
mapping = aes(y=label,x=name,fill=pos),
stat='identity',
alpha = 0.5,
offset = 0.02, pwidth = 0.06) +
scale_fill_viridis_d(option="D", name="Variable") +
new_scale_fill() +
new_scale_color() +
geom_fruit(data = md2, geom = geom_star,
mapping = aes(y = label, fill = `Clinical Status`, starshape = `Clinical Status`,color = `Clinical Status`),
stat='identity',
size = 0.8,
offset = 0.08) +
new_scale_color()+
geom_fruit(geom = geom_point,
data = md3,
mapping = aes(y=label,x=1, color = `WGS Group`),
stat='identity',
pwidth = 0.05,
offset = 0,
size = 0.8) +
geom_treescale(x = 0.05, y = 280, offset = 4, width = 0.02)
md <- metadata_extended[,c("label", "Region", "RST_Type")] %>%
pivot_longer(!label)
md$pos <- paste(md$name, md$value)
md$pos <- gsub("Region ", "", md$pos)
md$pos <- gsub("_Type", "", md$pos)
md$pos <- factor(md$pos, levels = c("RST 1", "RST 2", "RST 3", "EU Slovenia", "US Midwest", "US Northeast"))
md <- md %>% mutate(pos2 = as.numeric(pos))
md2 <- metadata_extended[,c("label", "Disseminated")] %>%
filter(!is.na(Disseminated)) %>%
mutate(Disseminated = recode(Disseminated, D = "Disseminated", L = "Localized"))
names(md2)[2] <- "Clinical Status"
md3 <- metadata_extended[,c("label", "ORF_length", "wgs_group")]
names(md3)[3] <- "WGS Group"
q1 <- ggtree(b, layout="fan", open.angle=5) %<+%
metadata_extended[,c("label", "OspC_Type", "wgs_group")] +
geom_tiplab(aes(label = paste("OspC Type ",OspC_Type, sep="")), size=1.2, offset = 0.00015) +
geom_nodelab(aes(label = round(posterior,2), subset = posterior > 0.9),
,hjust = 1.3,alpha = 0.4, color = "blue") +
#geom_tippoint(aes(color = wgs_group), alpha = 0.4)+
geom_treescale(x = 0.0015, y = 280, offset = 4, width = 0.001)+
scale_fill_manual(values=hue_pal()(23), guide = "none") +
geom_fruit(geom = geom_bar,
mapping = aes(y=label,x=1,fill=OspC_Type),
stat='identity',
alpha = 0.5,
pwidth = 0.18,
offset = 0.03) +
new_scale_fill()+
geom_fruit(data = md, geom = geom_tile,
mapping = aes(y=label,x=name,fill=pos),
stat='identity',
alpha = 0.5,
offset = 0.02, pwidth = 0.06) +
scale_fill_viridis_d(option="D", name="Variable") +
new_scale_fill() +
new_scale_color() +
geom_fruit(data = md2, geom = geom_star,
mapping = aes(y = label, fill = `Clinical Status`, starshape = `Clinical Status`,color = `Clinical Status`),
stat='identity',
size = 0.8,
offset = 0.08) +
new_scale_color()+
geom_fruit(geom = geom_point,
data = md3,
mapping = aes(y=label,x=1, color = `WGS Group`),
stat='identity',
pwidth = 0.05,
offset = 0,
size = 0.8)
q1
ggsave("../results/figures/paper/revision/Figure_2.jpg", height = 8, width = 8)
# Figure S2A (ML tree) ####
q3 <- ggtree(iq_tree, layout="fan", open.angle=5) %<+%
metadata_extended[,c("label", "OspC_Type", "wgs_group")] +
geom_tiplab(aes(label = paste("OspC Type ",OspC_Type, sep=""), color = OspC_Type), size=1.2, offset = 0.00015) +
geom_nodelab(aes(label = round(UFboot,2), subset = UFboot > 90),
,hjust = 1.3,alpha = 0.4, color = "blue") +
#geom_tippoint(aes(color = wgs_group), alpha = 0.4)+
geom_treescale(x = 0.0015, y = 280, offset = 4, width = 0.001)+
scale_fill_manual(values=hue_pal()(23), guide = "none") +
geom_fruit(geom = geom_bar,
mapping = aes(y=label,x=1,fill=OspC_Type),
stat='identity',
alpha = 0.5,
pwidth = 0.18,
offset = 0.03) +
new_scale_fill()+
geom_fruit(data = md, geom = geom_tile,
mapping = aes(y=label,x=name,fill=pos),
stat='identity',
alpha = 0.5,
offset = 0.02, pwidth = 0.06) +
scale_fill_viridis_d(option="D", name="Variable") +
new_scale_fill() +
new_scale_color() +
geom_fruit(data = md2, geom = geom_star,
mapping = aes(y = label, fill = `Clinical Status`, starshape = `Clinical Status`,color = `Clinical Status`),
stat='identity',
size = 0.8,
offset = 0.08) +
new_scale_color()+
geom_fruit(geom = geom_point,
data = md3,
mapping = aes(y=label,x=1, color = `WGS Group`),
stat='identity',
pwidth = 0.05,
offset = 0,
size = 0.8)
q3
ggsave("../results/figures/paper/revision/Figure_S2A.jpg", height = 8, width = 8)
# Figure S2E (OspC circular tree) ####
metadata_extended_ospC <- metadata_extended[,c("label", "OspC_Type", "wgs_group")]
metadata_extended_ospC <- rbind(metadata_extended_ospC,
c("URI20_1", "G", "B.2"),
c("URI20_2", "G", "B.2"))
q2 <- ggtree(O_tree, layout="fan", open.angle=5) %<+%
metadata_extended_ospC +
geom_tiplab(aes(label = paste("OspC Type ",OspC_Type, sep="")), size=1.2, offset = 0.0075) +
geom_nodelab(aes(label = round(posterior,2), subset = posterior > 0.9),
,hjust = 1.3,alpha = 0.4, color = "blue") +
#geom_tippoint(aes(color = wgs_group), alpha = 0.4)+
scale_fill_manual(values=hue_pal()(23), guide = "none") +
geom_fruit(geom = geom_bar,
mapping = aes(y=label,x=1,fill=OspC_Type),
stat='identity',
alpha = 0.5,
pwidth = 0.18,
offset = 0.03) +
new_scale_fill()+
geom_fruit(data = md, geom = geom_tile,
mapping = aes(y=label,x=name,fill=pos),
stat='identity',
alpha = 0.5,
offset = 0.02, pwidth = 0.06) +
scale_fill_viridis_d(option="D", name="Variable") +
new_scale_fill() +
new_scale_color() +
geom_fruit(data = md2, geom = geom_star,
mapping = aes(y = label, fill = `Clinical Status`, starshape = `Clinical Status`,color = `Clinical Status`),
stat='identity',
size = 0.8,
offset = 0.08) +
new_scale_color()+
geom_fruit(geom = geom_point,
data = md3,
mapping = aes(y=label,x=1, color = `WGS Group`),
stat='identity',
pwidth = 0.05,
offset = 0,
size = 0.8) +
geom_treescale(x = 0.05, y = 280, offset = 4, width = 0.02)
q2
ggsave("../results/figures/paper/revision/Figure_S2E.jpg", height = 8, width = 8)
